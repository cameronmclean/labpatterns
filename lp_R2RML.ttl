#
# First attempt at R2RML mapping for pattern in mySQL entered via Django admin
# based in priyatna paper from ISWC 2013
#


@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdf: <http://http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix odp: <http://www.ontologydesignpatterns.org/cp/owl/partof.owl#> .
@prefix lp: <http://labpatterns.org/ns#> .




# create a triples map where the subject is a rdfs:Class with a newly minted IRI of the design_pattern {name} value, the predicate is rdf:label, object is the literal value of the {name} column
# also assert that the newly minted IRI and pattern name is a subclass of "DesignPattern"

<#TriplesMapPatternName> a rr:TriplesMap ;
	rr:logicalTable [ rr:tableName "mydb.design_pattern" ];

	rr:subjectMap [ rr:class rdfs:Class ;
					rr:termType rr:IRI ;
					rr:template "http://labpatterns.org/ns/pattern/{name}" ;
					];

	rr:predicateObjectMap [ rr:predicate rdfs:label ;
							rr:objectMap [ rr:column "name" ] ;
	];.


 # Generate an IRI for each of the forces, and give them a label
<#TriplesMapForce> a rr:TriplesMap ;
	rr:logicalTable [ rr:tableName "mydb.force" ];

	rr:subjectMap [ rr:class rdfs:Class ;
					rr:termType rr:IRI ;
					rr:template "http://labpatterns.org/ns/force/{name}" ; 
					];

	rr:predicateObjectMap [ rr:predicate rdfs:label ;
							rr:objectMap [ rr:column "name" ] ;
							];



# assert that each force is part of its parent pattern - does a join on id value form pattern and force tables, and return the value for the subject? for the #patternnaemtriplesmap above?

	rr:predicateObjectMap	[ rr:predicate odp:isPartOf ;
							rr:objectMap [
								rr:parentTriplesMap <#TriplesMapPatternName> ;
								rr:joinCondition [
									rr:child "parent_pattern_id" ;
									rr:parent "id" ;
									];
								];
						];.

